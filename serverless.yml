service: edocs-documents-api

provider:
  name: aws
  runtime: nodejs12.x
  region: eu-west-2
  stage: ${opt:stage}
  timeout: 15
  apiGateway:
    binaryMediaTypes:
      - '*/*'
  vpc:
    securityGroupIds:
      - sg-022acccbebd7bca46
    subnetIds:
      - subnet-00356e0650138f74f
      - subnet-0a7f442c22a6feedc

plugins:
  - serverless-offline
  - serverless-offline-ssm

functions:
  getDoc:
    name: edocs-documents-api-${self:provider.stage}-getDoc
    role: arn:aws:iam::775052747630:role/LBH_Lambda_Execution
    handler: api/index.getDoc
    package:
      exclude:
        - '**'
      include:
        - api/index.js
        - api/lib/**
        - node_modules/**
    events:
      - http:
          path: 'documents/{documentId}'
          method: GET
          # authorizer: ${self:custom.authorizer.edocs-documents-api-authorizer}
    environment:
      stage: ${self:provider.stage}
  
  edocs-documents-api-authorizer:
    name: edocs-documents-api-authorizer-${self:provider.stage}
    role: arn:aws:iam::775052747630:role/LBH_Lambda_Execution
    handler: api/authorizer.handler
    environment:
      jwtsecret: ${ssm:/common/hackney-jwt-secret}
      allowedGroups: '*'

custom:
  stage: ${self:provider.stage}
  authorizer:
    edocs-documents-api-authorizer:
      name: edocs-documents-api-authorizer
      type: request
      resultTtlInSeconds: 0
